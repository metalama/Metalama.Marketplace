<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<AspectLibrary>
    <Name>Metalama.Extensions.Architecture</Name>
    <Kind>Package</Kind>
    <Categories>
        <Category>Architecture</Category>
    </Categories>
    <Author>PostSharp Technologies</Author>
    <Quality>Certified</Quality>
    <License>MIT</License>
    <SourceUrl>https://github.com/postsharp/Metalama.Extensions/tree/HEAD/src/Metalama.Extensions.Architecture</SourceUrl>
    <DocumentationUrl>https://doc.metalama.net/conceptual/architecture</DocumentationUrl>
    <PackageUrl>https://www.nuget.org/packages/Metalama.Extensions.Architecture</PackageUrl>
    <Summary>
        Metalama Architecture implements architecture-as-code: the ability to validate the codebase against architecture rules in real time, in the IDE.
    </Summary>
    <Description>

    </Description>
    <Keywords>
        <Keyword>architecture</Keyword>
        <Keyword>dependency</Keyword>
        <Keyword>naming</Keyword>
        <Keyword>convention</Keyword>
        <Keyword>ruler</Keyword>
        <Keyword>usage</Keyword>
        <Keyword>validate</Keyword>
        <Keyword>verify</Keyword>
        <Keyword>reference</Keyword>        
        <Keyword>namespace</Keyword>
        <Keyword>implement</Keyword>
    </Keywords>
    <AspectGroups>
        <AspectGroup>
            <Name>Aspects</Name>
            <Aspects>
                <Aspect>
                    <Name>CanOnlyBeUsedFrom</Name>
                    <DocumentationUrl>https://doc.metalama.net/api/metalama_extensions_architecture_aspects_canonlybeusedfromattribute</DocumentationUrl>
                    <Description>Reports a warning when the target declaration is accessed from outside of the given scope.</Description>
                </Aspect>               
                <Aspect>
                    <Name>InternalsCanOnlyBeUsedFrom</Name>
                    <DocumentationUrl>https://doc.metalama.net/api/metalama_extensions_architecture_aspects_internalscanonlybeusedfromattribute</DocumentationUrl>
                    <Description>Reports a warning when any internal member of the type is accessed from outside the given scope.</Description>
                </Aspect>               
                <Aspect>
                    <Name>CannotBeUsedFrom</Name>
                    <DocumentationUrl>https://doc.metalama.net/api/metalama_extensions_architecture_aspects_cannotbeusedfromattribute</DocumentationUrl>
                    <Description>Reports a warning when the target declaration is accessed from the given scope.</Description>
                </Aspect>               
                <Aspect>
                    <Name>InternalsCannotBeUsedFrom</Name>
                    <DocumentationUrl>https://doc.metalama.net/api/metalama_extensions_architecture_aspects_internalscannotbeusedfromattribute</DocumentationUrl>
                    <Description>Reports a warning when any internal member of the type is accessed from the given scope.</Description>
                </Aspect>   
                <Aspect>
                    <Name>InternalOnlyImplement</Name>
                    <DocumentationUrl>https://doc.metalama.net/api/metalama_extensions_architecture_aspects_internalonlyimplementattribute</DocumentationUrl>
                    <Description>Reports a warning when the target is implemented by a different project than the current one, except if this project has access to internals.</Description>
                </Aspect> 
                <Aspect>
                    <Name>Experimental</Name>
                    <DocumentationUrl>https://doc.metalama.net/conceptual/architecture/experimental</DocumentationUrl>
                    <Description>Report a warning when a declaration is being used except if this declaration is itself experimental.</Description>
                </Aspect> 
                <Aspect>
                    <Name></Name>
                    <DocumentationUrl></DocumentationUrl>
                    <Description></Description>
                </Aspect>             
                <Aspect>
                    <Name>DerivedTypesMustRespectNamingConvention</Name>
                    <DocumentationUrl>https://doc.metalama.net/api/metalama_extensions_architecture_aspects_derivedtypesmustrespectnamingconventionattribute</DocumentationUrl>
                    <Description>Verifies that the derived types respect a given naming convention.</Description>
                </Aspect>               
            </Aspects>

        </AspectGroup>
        <AspectGroup>
            <Name>Fabric Extensions</Name>
            <Aspects>
                <Aspect>
                    <Name>CanOnlyBeUsedFrom</Name>
                    <DocumentationUrl>https://doc.metalama.net/api/metalama_extensions_architecture_fabrics_verifierextensions_canonlybeusedfrom</DocumentationUrl>
                    <Description>Reports a warning when any type in the current scope is used from a different context than the ones matching the specified predicate.</Description>
                </Aspect> 
                <Aspect>
                    <Name>InternalsCanOnlyBeUsedFrom</Name>
                    <DocumentationUrl>https://doc.metalama.net/api/metalama_extensions_architecture_fabrics_verifierextensions_internalscanonlybeusedfrom</DocumentationUrl>
                    <Description>Reports a warning when any of the internal APIs of the current scope in used from a different context than the one allowed, except if this concept has access to the type using inheritance rules.</Description>
                </Aspect> 
                <Aspect>
                    <Name>CannotBeUsedFrom</Name>
                    <DocumentationUrl>https://doc.metalama.net/api/metalama_extensions_architecture_fabrics_verifierextensions_cannotbeusedfrom</DocumentationUrl>
                    <Description>Reports a warning when any type in the current scope is used from the context matching the specified predicate.</Description>
                </Aspect>          
                <Aspect>
                    <Name>InternalsCannotBeUsedFrom</Name>
                    <DocumentationUrl>https://doc.metalama.net/api/metalama_extensions_architecture_fabrics_verifierextensions_internalscannotbeusedfrom</DocumentationUrl>
                    <Description>Reports a warning when any of the internal APIs of the current scope in used from a different context different than the one allowed, except if this concept has access to the type using inheritance rules.</Description>
                </Aspect> 
                <Aspect>
                    <Name>Experimental</Name>
                    <DocumentationUrl>https://doc.metalama.net/api/metalama_extensions_architecture_fabrics_verifierextensions_experimental</DocumentationUrl>
                    <Description>Report a warning when a declaration is being used except if this declaration is itself experimental.</Description>
                </Aspect> 
                <Aspect>
                <Name>MustRespectNamingConvention</Name>
                <DocumentationUrl>https://doc.metalama.net/api/metalama_extensions_architecture_fabrics_verifierextensions_mustrespectnamingconvention</DocumentationUrl>
                <Description>Verifies that the selected declarations respect a given naming convention.</Description>
                </Aspect>
            </Aspects>
        </AspectGroup>
    </AspectGroups>
    
</AspectLibrary>